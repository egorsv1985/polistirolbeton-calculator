@charset "UTF-8";
/* -----------------------------------------------------------------
                       @media
1-ый параметр $min-max принимает 3 аргумента min, max, min-max.
   min       - для mobil @media
   max       - для dectop @media
   min-max   - для промежутка между mobil-dectop @media
2-ой параметр $breakpoint_1 принимает 1-ин аргумент.
   ключ      - хранятся в созданной карте $grid_breakpoints(xxl, xl, lg, md , sm...)
3-ий параметр $breakpoint_2 принимает 1-ин аргумент, является не обязательным параметром.
   ключ      - хранятся в созданной карте $grid_breakpoints(xxl, xl, lg, md , sm...) нужен для 1-ого параметра 3 аргумента.
 Дополнение:
   map-has-key  - Нужен для проверки ключа в карте, если ключа указанного нет то условие не выполняется.
   map-get      - Нужен для использование ключей из карты.
Пример:
   @include media(max, xxl) { display: none;}
   @include media(min, xxl) { display: none;}
   @include media(min-max, mn-lg, mx-xxl) { display: none;}
Одиночные брекпоинты:
   @include media(max, 870px,) { display: none;}
   @include media(min, 870px,) { display: none;}
   @include media(min-max, 870px, 1000px) { display: none;}
--------------------------------------------------------------------*/
@font-face {
  font-family: icons;
  font-display: swap;
  src: url("../fonts/icons.woff2") format("woff2"), url("../fonts/icons.woff") format("woff");
  font-weight: 400;
  font-style: normal;
}
@font-face {
  font-family: OpenSans;
  font-display: swap;
  src: url("../fonts/OpenSans-Regular.woff2") format("woff2"), url("../fonts/OpenSans-Regular.woff") format("woff");
  font-weight: 400;
  font-style: normal;
}
@font-face {
  font-family: open;
  font-display: swap;
  src: url("../fonts/open-sans-bold.woff2") format("woff2"), url("../fonts/open-sans-bold.woff") format("woff");
  font-weight: 400;
  font-style: normal;
}
@font-face {
  font-family: Segoe UI Semibold;
  font-display: swap;
  src: url("../fonts/Segoe UI Semibold.woff2") format("woff2"), url("../fonts/Segoe UI Semibold.woff") format("woff");
  font-weight: 400;
  font-style: normal;
}
@font-face {
  font-family: Segoe UI;
  font-display: swap;
  src: url("../fonts/Segoe UI.woff2") format("woff2"), url("../fonts/Segoe UI.woff") format("woff");
  font-weight: 400;
  font-style: normal;
}
@font-face {
  font-family: TrebuchetMS;
  font-display: swap;
  src: url("../fonts/TrebuchetMS-Bold.woff2") format("woff2"), url("../fonts/TrebuchetMS-Bold.woff") format("woff");
  font-weight: 700;
  font-style: normal;
}
@font-face {
  font-family: TrebuchetMS;
  font-display: swap;
  src: url("../fonts/TrebuchetMS.woff2") format("woff2"), url("../fonts/TrebuchetMS.woff") format("woff");
  font-weight: 400;
  font-style: normal;
}
@font-face {
  font-family: Verdana;
  font-display: swap;
  src: url("../fonts/Verdana.woff2") format("woff2"), url("../fonts/Verdana.woff") format("woff");
  font-weight: 400;
  font-style: normal;
}
[class*=_icon-]:before {
  font-family: "icons";
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

[class*=_icon-]:before {
  display: block;
}

._icon-cart:before {
  content: "\e900";
}

._icon-check:before {
  content: "\e901";
}

._icon-delet:before {
  content: "\e902";
}

._icon-instagram:before {
  content: "\e903";
}

._icon-logo:before {
  content: "\e904";
}

._icon-plus:before {
  content: "\e905";
}

._icon-search:before {
  content: "\e906";
}

._icon-youtube:before {
  content: "\e907";
}

._icon-telegram:before {
  content: "\e908";
}

._icon-arrow:before {
  content: "\e909";
}

* {
  padding: 0px;
  margin: 0px;
  border: 0px;
}

*,
*:before,
*:after {
  box-sizing: border-box;
}

html,
body {
  height: 100%;
  min-width: 320px;
}

body {
  color: #262626;
  line-height: 1;
  font-family: "Segoe UI";
  font-size: 0.75rem;
  -ms-text-size-adjust: 100%;
  -moz-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

input,
button,
textarea {
  font-family: "Segoe UI";
  font-size: inherit;
}

button {
  cursor: pointer;
  color: inherit;
  background-color: inherit;
}

a {
  color: inherit;
}

a:link,
a:visited {
  text-decoration: none;
}

a:hover {
  text-decoration: none;
}

ul li {
  list-style: none;
}

img {
  vertical-align: top;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-weight: inherit;
  font-size: inherit;
}

.lock body {
  overflow: hidden;
  touch-action: none;
}
.wrapper {
  min-height: 100%;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}
.wrapper > main {
  flex: 1 1 auto;
}
.wrapper > * {
  min-width: 0;
}

/*
(i) Стили будут применяться ко 
всем классам содержащим *__container
Например header__container, main__container и т.д.
Снипет (HTML): cnt
*/
[class*=__container] {
  max-width: 76.25rem;
  box-sizing: content-box;
  margin: 0 auto;
  padding: 0 0.9375rem;
}

input[type=text],
input[type=email],
input[type=tel],
textarea {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.checkbox {
  position: relative;
  padding: 6px 0 5px 40px;
}
.checkbox__input {
  position: absolute;
  width: 0;
  height: 0;
  opacity: 0;
}
.checkbox__input:checked + .checkbox__label:before {
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;
  background-image: url("../img/layers/check_arrow.png");
  background-size: 11px 9px;
}
.checkbox__label {
  cursor: pointer;
  display: inline-flex;
  align-items: center;
  position: relative;
  width: 100%;
  font-size: 12px;
  line-height: 1.2;
  font-weight: 400;
  color: #262626;
  letter-spacing: 0.4px;
}
.checkbox__label:before {
  width: 15px;
  height: 15px;
  content: "";
  display: block;
  box-shadow: inset 0px 0 4px 1px rgba(0, 0, 0, 0.29);
  background-color: #f2f2f2;
  border: 1px solid #999a9a;
  position: absolute;
  top: 50%;
  left: -30px;
  transform: translateY(-50%);
}
.spollers__box-title._spoller-active .spollers__title::before {
  transform: translateY(-50%) rotate(180deg);
}
._spoller-init .spollers__box-title__title {
  cursor: pointer;
}
._spoller-init .spollers__box-title__title::before {
  transition: transform 0.5s ease 0s;
}
.spollers__box-subtitle._spoller-active .spollers__subtitle::before {
  transform: translateY(-50%) rotate(180deg);
}
._spoller-init .spollers__box-subtitle__subtitle {
  cursor: pointer;
}
._spoller-init .spollers__box-subtitle__subtitle::before {
  transition: transform 0.5s ease 0s;
}
.spollers__body {
  position: relative;
}
.spollers__box {
  display: flex;
  justify-content: space-between;
  padding: 10px 0 5px;
}
.spollers__box-title {
  width: 100%;
  cursor: pointer;
  background-color: rgba(53, 65, 76, 0.14);
  display: flex;
  align-items: center;
  padding: 10px 0 10px 10px;
}
.spollers__box-title--notbg {
  background-color: transparent;
}
.spollers__title {
  font-family: "Segoe UI Semibold";
  font-size: 12px;
  line-height: 1.2;
  font-weight: 600;
  color: #262626;
  letter-spacing: 0.4px;
}
.spollers__title, .spollers__subtitle {
  display: inline-block;
  position: relative;
  cursor: pointer;
}
.spollers__title::before, .spollers__subtitle::before {
  content: "";
  display: block;
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;
  background-image: url("../img/layers/arrow.png");
  width: 12px;
  height: 7px;
  position: absolute;
  top: 50%;
  right: -40px;
  transform: translateY(-50%);
  transition: all 0.3s ease 0s;
}
.spollers__box-subtitle {
  cursor: pointer;
  width: 100%;
  display: flex;
  align-items: center;
  padding: 2px 0 8px 40px;
}
.spollers__subtitle {
  font-size: 12px;
  line-height: 1.2;
  font-weight: 400;
  color: #262626;
  letter-spacing: 0.4px;
  max-width: 440px;
}
.spollers__subtitle::before {
  right: -40px;
}
.spollers__subbody {
  padding-left: 20px;
}
.spollers__list {
  padding-left: 40px;
}
.spollers__body-item:nth-child(even) {
  background-color: #f9f9f9;
}

.spollers__list-item:nth-child(even) {
  background-color: #f9f9f9;
}
.spollers__list-item:nth-child(odd) {
  background-color: #fff;
}

.container {
  max-width: 1266px;
  padding: 0 10px;
  margin: 0 auto;
}
@media only screen and (max-width: 1023px) {
  .container {
    padding: 0 20px;
  }
}
